/**
 * 🗣️ Do as I say 📝, not as I do 🚫🤷‍♂️.
 *
 * Expo Snack does not allow setting the JSX runtime to automatic, or running a custom server.
 * Therefore these demos utilize undocumented & unstable APIs that should not be used!
 *
 * These examples are for demonstrative purposes only. They have known bugs/issues and are not
 * representative of NativeWind.
 *
 * Please do not use these APIs in your own projects.
 */
// var tailwindScriptLoaded = Platform.OS !== "web";
// if (Platform.OS === "web") {
//   var tailwindScript = document.createElement("script");
//   tailwindScript.addEventListener("load", () => {
//     tailwindScriptLoaded = true;
//   });
//   tailwindScript.setAttribute("src", "https://cdn.tailwindcss.com");
//   document.body.appendChild(tailwindScript);
// } else {
//   StyleSheet.unstable_hook_onClassName = (content) => {
//     fetch(`http://localhost:3000/api/compile`, {
//       method: "POST",
//       headers: {
//         "Content-Type": "application/json",
//       },
//       body: JSON.stringify({ content }),
//     })
//       .then((response) => response.json())
//       .then((body) => {
//         StyleSheet.register(body);
//       })
//       .catch((error) => {
//         console.warn(error.message);
//       });
//   };
// }

// (globalThis as any).isExpoSnack = true;
// const render = (element: any, { children, ...props }: any, key?: string) => {
//   children = Array.isArray(children) ? children : [children];
//   return createElement(element, { key, ...props }, ...children);
// };
// export const View = unstable_styled(RNView, render);
// export const Text = unstable_styled(RNText, render);
// export const Pressable = unstable_styled(RNPressable, render);

// export function withExpoSnack(Component: any) {
//   return function () {
//     const [, rerender] = useState(false);
//     useEffect(() => {
//       return tailwindScript?.addEventListener("load", () => {
//         rerender(true);
//       });
//     }, []);
//     return tailwindScriptLoaded ? <Component /> : <></>;
//   };
// }